#!/bin/bash
# Fabians7 script of run
# parameters are:
# $1 main_class
# $2 input_file
# $3 timelimit (limit to run all the repetitions, by default only one repetition)
# $4 number_of_repetitions_to_run (optional, can be used for better tuning the timelimit)
# $5 maximum allowed memory (in MBytes)
# $6 maximum allowed output size (in KBytes)
#
# the output of the submission should be directed to the standard output
#
# the return code show what happened (according to safeexec):
# 0 ok
# 1 compile error
# 2 runtime error
# 3 timelimit exceeded
# 4 internal error
# 5 parameter error
# 6 internal error
# 7 memory limit exceeded
# 8 security threat
# 9 runtime error
# other_codes are unknown to salomon: in this case salomon will present the
#                                  last line of standard output to the judge

umask 0022
id -u salomonjail >/dev/null 2>/dev/null
if [ $? == 0 ]; then
	salomonu=`id -u salomonjail`
	salomong=`id -g salomonjail`
	chown salomonjail.nogroup .
else
	salomonu=`id -u nobody`
	salomong=`id -g nobody`
	chown nobody.nogroup .
fi
if [ "$salomonu" == "" -o "$salomong" == "" ]; then
	echo "error finding user to run script"
	exit 43
fi

# this script makes use of safeexec to execute the code with less privilegies
# make sure that directories below are correct.
sf=`which safeexec`
[ -x "$sf" ] || sf=/usr/bin/safeexec

if [ "$1" == "" -o "$2" == "" -o "$3" == "" ]; then
    echo "parameter problem"
    exit 43
fi
name=`basename "$1"`
if [ ! -r "$2" ]; then
    echo "$2 not found (or is not in the current dir) or it's not readable"
    exit 45
fi
if [ ! -x "$sf" ]; then
    echo "$sf not found or it's not executable"
    exit 46
fi

time=$3
if [ "$time" -gt "0" ]; then
  let "ttime = $time + 30"
else
  time=1
  ttime=30
fi

nruns=1
if [ "$4" != "" ]; then
  if [ "$4" -gt "0" ]; then
    nruns=$4
  fi
fi
maxm=512000
if [ "$5" != "" ]; then
  if [ "$5" -gt "0" ]; then
    maxm=${5}000
  fi
fi
let "maxms = $maxm / 10"
maxf=1024
if [ "$6" != "" ]; then
  if [ "$6" -gt "0" ]; then
    maxf=${6}
  fi
fi

rm -f runit.retcode 2>/dev/null
cp "$2" stdin0 2>/dev/null

cdir=`pwd`
echo "Current directory is $cdir" >&2
echo $cdir | grep -q "/salomonjail"
if [ $? == 0 ]; then
    cdir=`echo $cdir | sed "s/.*\/salomonjail//"`
    cat <<EOF > runit.sh
#!/bin/bash
cd "$cdir"
[ -f /proc/cpuinfo ] || /bin/mount -t proc proc /proc
#/bin/mount --bind /dev /dev
[ -d /sys/kernel ] || /bin/mount -t sysfs sysfs /sys
python3=`which python3`
[ -x "\$python3" ] || python3=/usr/bin/python3
if [ ! -x "\$python3" ]; then
    echo "\$python3 not found or it's not executable"
    exit 47
fi
"$sf" -r$nruns -t$time -T$ttime -istdin0 -F256 -u256 -ostdout0 -estderr0 -U$salomonu -G$salomong -n0 -C. -f$maxf -d$maxm -m$maxm -- "\$python3" "$name"
retval=\$?
echo \$retval > runit.retcode
if [ ! -d /salomonjail ]; then
  /bin/umount /proc 2>/dev/null
  #/bin/umount /dev
  /bin/umount /sys 2>/dev/null
fi
EOF
    chmod 755 runit.sh
    chroot /salomonjail "$cdir/runit.sh"
	if [ -r runit.retcode ]; then
    	ret=`cat runit.retcode`
	fi
	if [ "$ret" == "" ]; then
		echo "Execution error - check autojudging"
		exit 49
	fi
else
    echo "CODE NOT BEING CHROOTED. DO NOT RUN THIS ON THE MAIN SERVER" >&2
    echo "CODE NOT BEING CHROOTED. DO NOT RUN THIS ON THE MAIN SERVER" >&2
    echo "CODE NOT BEING CHROOTED. DO NOT RUN THIS ON THE MAIN SERVER" >&2
	python3=`which python3`
	[ -x "$python3" ] || python3=/usr/bin/python3
	if [ ! -x "$python3" ]; then
		echo "$python3 not found or it's not executable"
		exit 47
	fi
	"$sf" -r$nruns -t$time -T$ttime -istdin0 -F256 -u256 -U$salomonu -G$salomong -ostdout0 -estderr0 -n0 -C. -d$maxm -m$maxm -f$maxf -- "$python3" "$name"
	ret=$?
fi
if [ $ret -gt 10 ]; then
	echo "> > > > > > > Nonzero return code - possible runtime error - I'M GUESSING IT IS RUNTIME ERROR < < < < < < < <"
	ret=9
fi
if [ -f stdout0 ]; then
  cat stdout0
fi
exit $ret
